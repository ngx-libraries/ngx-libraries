variables:
  RELEASE_BRANCH: develop

stages:
  - Building dependency
  - Building libraries and linting projects
  - Building and testing projects
  - Publish artifacts
  - Deploy artifacts

include:
  - project: savushkin.i/environment
    ref: master
    file: templates/gitlab-ci/pipeline-templates/environments.yml

  - project: savushkin.i/environment
    ref: master
    file: templates/gitlab-ci/job-templates/dependencies-job-templates.yml

  - project: savushkin.i/environment
    ref: master
    file: templates/gitlab-ci/job-templates/commitlint-job-templates.yml

  - project: savushkin.i/environment
    ref: master
    file: templates/gitlab-ci/job-templates/angular-job-templates.yml

Linting Angular Projects:
  stage: Building libraries and linting projects
  extends:
    - .ng:lint
  script:
    - make -f /opt/makefiles/Makefile.monorepo-angular lint

Production Building Angular Libraries:
  stage: Building libraries and linting projects
  extends:
    - .ng:build
  script:
    - make -f /opt/makefiles/Makefile.monorepo-angular build-production
  artifacts:
    expire_in: 30 days
    paths:
      - dist/@ngx-library/

Testing Angular Projects:
  stage: Building and testing projects
  extends:
    - .ng:test
  dependencies:
    - Production Building Angular Libraries
  script:
    - make -f /opt/makefiles/Makefile.monorepo-angular test

Semantic Release:
  stage: Publish artifacts
  cache:
    key: ${CI_COMMIT_REF_SLUG}-dependency
    paths:
      - node_modules/
    policy: pull
  image: registry.gitlab.com/savushkin.i/environment/builder:latest
  variables:
    GIT_STRATEGY: clone
    GITLAB_URL: https://$CI_SERVER_HOST
    GIT_AUTHOR_NAME: $GITLAB_USER_NAME
    GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
    GIT_COMMITTER_NAME: Mishka Assistant
    GIT_COMMITTER_EMAIL: assistant@savushkin.me
    NPM_CONFIG_REGISTRY: https://${NPM_REGISTRY_URL}
    NPM_TOKEN: ${NPM_REGISTRY_TOKEN}
  dependencies:
    - Dependency installation
    - Production Building Angular Libraries
  when: manual
  before_script:
    - npm run ci:publish:before_script --if-present
  script:
    - ./node_modules/.bin/semantic-release --repository-url "${CI_REPOSITORY_URL}"
  after_script:
    - npm run ci:publish:after_script --if-present
